{"version":3,"sources":["lib/google-api.js","components/Navbar.js","components/LoadingSpinner.js","components/AddressBar.js","components/OfficialCard.js","App.js","serviceWorker.js","index.js","assets/images/default-photo.jpg"],"names":["CIVIC_API_PARAMS","key","process","GEOCODE_API_PARAMS","API","client","axios","create","getCity","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","latitude","longitude","wrap","_context","prev","next","abrupt","get","params","objectSpread","latlng","concat","stop","_x","_x2","apply","this","arguments","representatives","_ref2","_callee2","options","_context2","_x3","voterInfo","_ref3","_callee3","_context3","_x4","topCities","Navbar","props","urlParams","URLSearchParams","window","location","search","react_default","createElement","id","className","react_fontawesome_index_es","icon","map","city","href","style","marginLeft","LoadingSpinner","styled_spinkit_esm","size","AddressBar","state","address","handleChange","localStorage","removeItem","_this","setState","handleSelect","setItem","history","pushState","path","origin","geocodeByAddress","then","results","getLatLng","latLng","onChange","catch","error","console","getItem","dist_default","value","onSelect","searchOptions","componentRestrictions","country","classNames","input","autocompleteContainer","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","backgroundColor","cursor","borderRadius","padding","assign","Math","random","toString","description","Component","OfficialCard","mapAddress","formattedAddress","line1","line2","line3","zip","encodedAddress","encodeURIComponent","mapUrl","open","searchName","_this2","_this$props","office","official","name","party","officeName","proxiedPhotoUrl","photoUrl","log","includes","replace","photos","defaultPhoto","push","Array","isArray","visibility_sensor_default","umd_default","src","loader","color","length","phones","Fragment","title","target","rel","emails","onClick","urls","channels","channel","url","appUrl","type","test","navigator","userAgent","MapsAPIUrl","App","isLoading","showAddressBar","componentDidMount","interval","setInterval","google","document","querySelector","focus","addEventListener","e","select","clearInterval","fetch","res","json","data","country_code","alert","err","checkFABState","openFAB","classList","contains","remove","add","divisions","usa","Google","sent","values","forEach","division","offices","officeIndices","find","div","filter","unshift","officials","blur","t0","scrollToTop","scrollTo","actionStyle","Helmet","REACT_APP_GOOGLE_ANALYTICS_ID","async","AddressBar_AddressBar","safeDivisionName","officeIndex","officialIndices","officialIndex","OfficialCard_OfficialCard","textDecoration","react_tiny_fab_esm","alwaysShowTitle","event","mainButtonStyles","children","text","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","library","fab","faAngleDoubleUp","faBars","faEnvelope","faGavel","faHeart","faLink","faMapMarkerAlt","faPhone","faGlobeAmericas","faDemocrat","faRepublican","faVoteYea","faWindowMinimize","faBeer","faSearch","faLandmark","faCity","ReactDOM","render","src_App","getElementById","URL","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d40b3e4f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst CIVIC_API_KEY = process.env.REACT_APP_GOOGLE_API_KEY\r\nconst GEOCODE_API_KEY = process.env.REACT_APP_GOOGLE_API_KEY\r\n\r\nconst CIVIC_API_ROOT = 'https://www.googleapis.com/civicinfo/v2'\r\nconst GEOCODE_API_ROOT = 'https://maps.googleapis.com/maps/api/geocode/json'\r\n\r\nconst CIVIC_API_PARAMS = { key: CIVIC_API_KEY }\r\nconst GEOCODE_API_PARAMS = { key: GEOCODE_API_KEY }\r\nconst API = {}\r\n\r\nconst client = axios.create({})\r\n\r\n// Used during development\r\n// client.interceptors.request.use(request => {\r\n//   console.log('Starting Request', request)\r\n//   return request\r\n// })\r\n\r\n// client.interceptors.response.use(response => {\r\n//   console.log('Response:', response)\r\n//   return response\r\n// })\r\n\r\nAPI.getCity = async (latitude, longitude) => {\r\n  return client.get(GEOCODE_API_ROOT, {\r\n    params: {\r\n      ...GEOCODE_API_PARAMS,\r\n      latlng: `${latitude}, ${longitude}`\r\n    }\r\n  })\r\n}\r\n\r\nAPI.representatives = async (options) => {\r\n  return client.get(`${CIVIC_API_ROOT}/representatives`, {\r\n    params: {\r\n      ...CIVIC_API_PARAMS,\r\n      ...options\r\n    }\r\n  })\r\n}\r\n\r\nAPI.voterInfo = async (options) => {\r\n  return client.get(`${CIVIC_API_ROOT}/voterinfo`, {\r\n    params: {\r\n      ...CIVIC_API_PARAMS,\r\n      ...options\r\n    }\r\n  })\r\n}\r\n\r\nexport default API\r\n","import React from 'react'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\n\r\nconst topCities = [\r\n  'New York, NY',\r\n  'Los Angeles, CA',\r\n  'Chicago, IL'\r\n]\r\n\r\nexport default function Navbar(props) {\r\n  const urlParams = new URLSearchParams(window.location.search)\r\n\r\n  return (\r\n    <nav id='navbar' className='navbar sticky-top navbar-expand-lg navbar-dark bg-dark animate__animated animate__slideInDown'>\r\n      <button className='navbar-brand navbar-title btn btn-link animate__animated animate__slideInLeft'>\r\n        <Icon icon='gavel' />\r\n        <span className='icon-text'>Who Governs Me?</span>\r\n      </button>\r\n\r\n      <div id=\"navbarMenu\" className='collapse navbar-collapse'>\r\n        <ul className='navbar-nav ml-auto animate__animated animate__slideInRight'>\r\n\r\n          {\r\n            topCities.map(city => {\r\n              return (\r\n                <li key={city} className={`nav-item ${urlParams.get('address') === city ? 'active' : '' }`}>\r\n                  <a className='nav-link btn btn-link' href={`?address=${city}`}>\r\n                    <Icon icon='city' />\r\n                    <span style={{ marginLeft: '10px' }}>{city}</span>\r\n                  </a>\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CubeGrid } from 'styled-spinkit'\r\n\r\nexport default function LoadingSpinner(props) {\r\n  return (\r\n    <CubeGrid size={props.size || 128} />\r\n  )\r\n}\r\n","/* global history */\r\n\r\nimport React, { Component } from 'react'\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete'\r\n\r\nexport default class AddressBar extends Component {\r\n  state = { address: null }\r\n\r\n  handleChange = address => {\r\n    address = address !== '' ? address : null\r\n    if (!address) localStorage.removeItem('address')\r\n    this.setState({ address })\r\n  }\r\n\r\n  handleSelect = address => {\r\n    this.setState({ address })\r\n    localStorage.setItem('address', address)\r\n\r\n    if (window.history.pushState) {\r\n      var path = window.location.origin + `?address=${address}`;\r\n      window.history.pushState({ path }, '', path);\r\n    }\r\n    \r\n    geocodeByAddress(address)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => this.props.onChange(address, latLng))\r\n      .catch(error => console.error(error))\r\n  }\r\n\r\n  componentDidMount () {\r\n    const urlParams = new URLSearchParams(window.location.search)\r\n    if (urlParams.get('address')) return this.handleSelect(urlParams.get('address'))\r\n    if (localStorage.getItem('address')) return this.handleSelect(localStorage.getItem('address'))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PlacesAutocomplete\r\n        value={this.state.address || localStorage.getItem('address') || ''}\r\n        onChange={this.handleChange}\r\n        onSelect={this.handleSelect}\r\n        searchOptions={{\r\n          componentRestrictions: { country: 'us' }\r\n        }}\r\n        classNames={{\r\n          input: 'places-search-input form-control',\r\n          autocompleteContainer: 'search-autocomplete-container'\r\n        }}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <input\r\n              {...getInputProps({\r\n                placeholder: \"What's your address?\",\r\n                className: 'location-search-input',\r\n              })}\r\n            />\r\n            <p className=\"text-muted text-right\"><em>Or, just your City and State if you prefer.</em></p>\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              {loading && <div>Loading...</div>}\r\n              {suggestions.map(suggestion => {\r\n                const className = suggestion.active\r\n                  ? 'suggestion-item--active'\r\n                  : 'suggestion-item';\r\n                // inline style for demonstration purpose\r\n                const style = suggestion.active\r\n                  ? { backgroundColor: '#ddd', cursor: 'pointer', borderRadius: '4px', padding: '2px' }\r\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                return (\r\n                  <div key={Math.random().toString(36)}\r\n                    {...getSuggestionItemProps(suggestion, {\r\n                      className,\r\n                      style,\r\n                    })}\r\n                  >\r\n                    <span>{suggestion.description}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Img from 'react-image'\r\nimport VisibilitySensor from 'react-visibility-sensor'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\n\r\nimport defaultPhoto from '../assets/images/default-photo.jpg'\r\n\r\nexport default class OfficialCard extends Component {\r\n  mapAddress = (address) => {\r\n    const formattedAddress = `${address.line1 || ''} ${address.line2 || ''} ${address.line3 || ''} ${address.city || ''} ${address.state || ''} ${address.zip || ''}`\r\n    const encodedAddress = encodeURIComponent(formattedAddress)\r\n    const mapUrl = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`\r\n\r\n    // console.log(formattedAddress, encodedAddress, mapUrl)\r\n    window.open(mapUrl)\r\n  }\r\n\r\n  render () {\r\n    const { office, official } = this.props\r\n\r\n    // Some tweaks for best Ballotpedia search results\r\n    let searchName\r\n    switch (official.name) {\r\n      case 'Donald J. Trump':\r\n        searchName = 'Donald Trump'; break;\r\n      default:\r\n        searchName = official.name\r\n    }\r\n\r\n    const party = \r\n      official.party ?\r\n        official.party === 'Unknown' ? 'Unknown Party' : official.party\r\n        : 'Unknown Party'\r\n\r\n    let officeName = office.name\r\n    switch (office.name) {\r\n      case 'governmentOfficer':\r\n        officeName = 'Government Officer'; break;\r\n      case 'legislatorUpperBody':\r\n        officeName = 'Legislator, Upper Body'; break;\r\n      case 'headofGovernment':\r\n        officeName = 'Head of Government'; break;\r\n      default:\r\n    }\r\n\r\n    let photoUrl = official.photoUrl\r\n    let proxiedPhotoUrl\r\n\r\n    console.log({ official, photoUrl })\r\n\r\n    // Fix known missing images\r\n    if (!photoUrl) {\r\n      if (official.name === 'Joseph R. Biden') photoUrl = 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/68/Joe_Biden_presidential_portrait.jpg/384px-Joe_Biden_presidential_portrait.jpg?download'\r\n      if (official.name === 'Kamala D. Harris') photoUrl = 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Kamala_Harris_Vice_Presidential_Portrait.jpg/384px-Kamala_Harris_Vice_Presidential_Portrait.jpg'\r\n    }\r\n  \r\n    // Proxy http images via https to prevent mixed content warnings\r\n    // Some sites block the request, so we try https version of original url first, then proxy\r\n    if (photoUrl && photoUrl.includes('http://')) {\r\n      photoUrl = photoUrl.replace('http://', 'https://')\r\n      proxiedPhotoUrl = `https://http-securifier.herokuapp.com/?url=${official.photoUrl}`\r\n    }\r\n\r\n    // Images timeout on attempting https, so to speed things up for common domains we hack around the usual order\r\n    if (photoUrl && photoUrl.includes('bioguide.congress.gov')) photoUrl = proxiedPhotoUrl\r\n\r\n    const photos = photoUrl ? [photoUrl] : defaultPhoto\r\n    if (proxiedPhotoUrl) photos.push(proxiedPhotoUrl)\r\n    if (Array.isArray(photos)) photos.push(defaultPhoto)\r\n\r\n    return (\r\n      <div className='official-card card mb-4'>\r\n        <div className='card-header'>\r\n          <VisibilitySensor>\r\n            <Img\r\n              className='img-thumbnail official-profile-image float-left'\r\n              src={photos}\r\n              loader={<Img className='img-thumbnail official-profile-image float-left' src={defaultPhoto} />}\r\n            />\r\n          </VisibilitySensor>\r\n\r\n          <p className='text-right'>\r\n            <span className='official-name'>{official.name}</span>\r\n            <br />\r\n            <span className='office-name'>{officeName}</span>\r\n            <br />\r\n\r\n            <span className='office-party'>\r\n              { party.includes('Republican') && <Icon icon='republican' color='#E91D0E' /> }\r\n              { party.includes('Democrat') && <Icon icon='democrat' color='#232066' /> }\r\n              <span className='icon-text'>{party}</span>\r\n            </span>\r\n\r\n          </p>\r\n        </div>\r\n\r\n        <div className='card-body'>\r\n          <div className='row'>\r\n            <div className='col'>\r\n              <address>\r\n                {\r\n                  official.address && official.address.length > 0 &&\r\n                  <p>\r\n                    \r\n                      { official.address[0].line1 !== '' && <span>{official.address[0].line1}<br /></span> }\r\n                      { official.address[0].line2 !== '' && <span>{official.address[0].line2}<br /></span> }\r\n                      { official.address[0].line3 !== '' && <span>{official.address[0].line3}<br />></span> }\r\n                      <span>{official.address[0].city}, {official.address[0].state} {official.address[0].zip}<br /></span>\r\n                    \r\n                  </p>\r\n                }\r\n\r\n                {\r\n                  official.phones && official.phones.length > 0 &&\r\n                  <>\r\n                    <Icon icon='phone' />\r\n                    <a className='icon-text' href={`tel:${official.phones[0]}`}>{official.phones[0]}</a>\r\n                    <br />\r\n                  </>\r\n                }\r\n              </address>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* <pre>{JSON.stringify(official, null, 2)}</pre> */}\r\n        </div>\r\n\r\n        <div className='card-footer'>\r\n          <div className='text-center'>\r\n            {\r\n              <a title='Search on Ballotpedia' className='btn btn-link' href={`https://ballotpedia.org/wiki/index.php?search=${searchName}`} target='_blank' rel='noopener noreferrer'>\r\n                <Icon icon='vote-yea' size='2x' />\r\n              </a>\r\n            }\r\n\r\n            {\r\n              official.emails && official.emails.length > 0 &&\r\n              <a title='Send Email' className='btn btn-link' href={`mailto:${official.emails[0]}`}>\r\n                <Icon icon='envelope' size='2x' />\r\n              </a>\r\n            }\r\n\r\n            {\r\n              official.phones && official.phones.length > 0 &&\r\n                <a title={`Call: ${official.phones[0]}`} className='btn btn-link' href={`tel://${official.phones[0]}`}>\r\n                  <Icon icon='phone' size='2x' />\r\n                </a>\r\n            }\r\n\r\n            {\r\n              official.address && official.address.length > 0 &&\r\n              <span title='View on Map' className='btn btn-link' onClick={() => this.mapAddress(official.address[0]) }>\r\n                <Icon icon='map-marker-alt' size='2x' />\r\n              </span>\r\n            }\r\n\r\n            {\r\n              official.urls && official.urls.length > 0 &&\r\n                <a title={`Visit website: ${official.urls[0]}`} className='btn btn-link' href={official.urls[0]} target='_blank' rel='noopener noreferrer'>\r\n                  <Icon icon='link' size='2x' />\r\n                </a>\r\n            }\r\n\r\n            {\r\n              official.channels && official.channels.length > 0 &&\r\n              official.channels.map(channel => {\r\n                let icon = null\r\n                let url = null\r\n                let appUrl = null\r\n\r\n                switch (channel.type) {\r\n                  case 'Facebook':\r\n                    icon = <Icon icon={['fab', 'facebook']} size='2x' />\r\n                    url = `https://fb.me/${channel.id}`\r\n                    // Have to do extra work to convert page name to page ID; not now\r\n                    // appUrl = `fb://profile?id=${channel.id}`\r\n                    appUrl = url\r\n                    break;\r\n                  case 'Twitter':\r\n                    icon = <Icon icon={['fab', 'twitter']} size='2x' />\r\n                    url = `https://twitter.com/${channel.id}`\r\n                    appUrl = `twitter://user?screen_name=${channel.id}`\r\n                    break;\r\n                  case 'YouTube':\r\n                    // Sometimes it's a channel ID instead. Not a quick way to determine channel/user without Youtube API. Avoiding for now.\r\n                    icon = <Icon icon={['fab', 'youtube']} size='2x' />\r\n                    url = `https://youtube.com/user/${channel.id}`\r\n                    appUrl = url\r\n                    break;\r\n                  default:\r\n                    icon = null\r\n                }\r\n\r\n                return (\r\n                  <span key={channel.type + channel.id}>\r\n                      {\r\n                        icon &&\r\n                        <a title={`${channel.type}: ${channel.id}`} className='btn btn-link' key={channel.type + channel.id} href={/Mobi|Android/i.test(navigator.userAgent) ? appUrl : url} target='_blank' rel='noopener noreferrer'>\r\n                          {icon}\r\n                        </a>\r\n                      }\r\n                  </span>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n  App: WhoGoverns.me\r\n  Author: Jay Mathis <https://github.com/mathiscode/whogoverns.me>\r\n  License: See LICENSE.md\r\n\r\n  Description:\r\n    This app pulls Google Civic data to assist citizens in contacting their representatives.\r\n*/\r\n\r\nimport React, { Component } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\nimport { Fab, Action } from 'react-tiny-fab'\r\nimport 'react-tiny-fab/dist/styles.css'\r\n\r\nimport Google from './lib/google-api'\r\n\r\nimport Navbar from './components/Navbar'\r\nimport LoadingSpinner from './components/LoadingSpinner'\r\nimport AddressBar from './components/AddressBar'\r\nimport OfficialCard from './components/OfficialCard'\r\n\r\nconst MapsAPIUrl = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    showAddressBar: false,\r\n    representatives: null\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let interval;\r\n    const checkGMapsLoaded = () => {\r\n      if (window.google) {\r\n        this.setState({ showAddressBar: true }, () => {\r\n          document.querySelector('.location-search-input').focus()\r\n          document.querySelector('.location-search-input').addEventListener('focus', e => {\r\n            e.target.select()\r\n          })\r\n        })\r\n\r\n        clearInterval(interval)\r\n      }\r\n    }\r\n\r\n    interval = setInterval(checkGMapsLoaded, 100)\r\n\r\n    fetch('https://json.geoiplookup.io')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.country_code !== 'US') {\r\n          window.alert('Please note that this app only provides data for the United States')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n\r\n    setInterval(this.checkFABState, 200)\r\n  }\r\n\r\n  checkFABState = () => {\r\n    // Stop animating the FAB if active\r\n    const openFAB = document.querySelector('.rtf')\r\n    if (openFAB.classList.contains('open')) document.querySelector('.rtf--mb').classList.remove('animate__animated', 'animate__infinite', 'animate__slower', 'animate__bounce')\r\n    if (openFAB.classList.contains('closed')) document.querySelector('.rtf--mb').classList.add('animate__animated', 'animate__infinite', 'animate__slower', 'animate__bounce')\r\n  }\r\n\r\n  onChange = async (address, latLng) => {\r\n    // console.log(address, latLng)\r\n\r\n    try {\r\n      this.setState({ isLoading: true, representatives: null })\r\n      let results = await Google.representatives({ address })\r\n\r\n      let divisions = []\r\n      Object.values(results.data.divisions).forEach(division => {\r\n        divisions.push({ name: division.name, offices: division.officeIndices })\r\n      })\r\n\r\n      const usa = divisions.find(div => div.name === 'United States')\r\n      divisions = divisions.filter(div => div.name !== 'United States')\r\n      divisions.unshift(usa)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        representatives: { divisions, offices: results.data.offices, officials: results.data.officials }\r\n      })\r\n\r\n      document.querySelector('.address-search-container').classList.add('done')\r\n      document.querySelector('.location-search-input').blur()\r\n\r\n      document.title = `Who Governs Me? • ${address}`\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  scrollToTop = () => {\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  render() {\r\n    const actionStyle = {\r\n      backgroundColor: '#2222aa'\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <script src={MapsAPIUrl}></script>\r\n\r\n          {\r\n            process.env.REACT_APP_GOOGLE_ANALYTICS_ID &&\r\n              <script async src={`https://www.googletagmanager.com/gtag/js?id=${process.env.REACT_APP_GOOGLE_ANALYTICS_ID}`}></script>\r\n          }\r\n\r\n          {\r\n            process.env.REACT_APP_GOOGLE_ANALYTICS_ID &&\r\n            <script>\r\n              {\r\n                `window.dataLayer = window.dataLayer || [];\r\n                function gtag(){dataLayer.push(arguments);}\r\n                gtag('js', new Date());\r\n                gtag('config', '${process.env.REACT_APP_GOOGLE_ANALYTICS_ID}');\r\n              `}\r\n            </script>\r\n          }\r\n        </Helmet>\r\n        \r\n        <Navbar />\r\n\r\n        <div className='container address-search-container'>\r\n          <h1 className='address-bar-title'>Research the people you're supposed to trust:</h1>\r\n          { !this.state.showAddressBar && <LoadingSpinner size={64} /> }\r\n          {\r\n            this.state.showAddressBar &&\r\n              <div className='animate__animated animate__fadeInDownBig'>\r\n                <AddressBar \r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n          }\r\n        </div>\r\n        \r\n        <div className='container search-results-wrapper'>\r\n          <h3 className=\"quote animate__animated animate__backInUp animate__delay-1s\">\"It's not the voting that's democracy; it's the counting.\" <small>&mdash; Tom Stoppard</small></h3>\r\n\r\n          {\r\n            this.state.isLoading && <LoadingSpinner />\r\n          }\r\n\r\n          {\r\n            this.state.representatives &&\r\n            <div className='row'>\r\n              <div className='col'>\r\n                {\r\n                  this.state.representatives.divisions.map(division => {\r\n                    if (!division.offices || division.offices.length === 0) return null\r\n\r\n                    let safeDivisionName = division.name.replace(/([' | ])+/g, '_')\r\n\r\n                    return (\r\n                      <section key={division.name} id={'SECTION_' + safeDivisionName}>\r\n                        <div className='card mt-4'>\r\n                          <div className='card-header bg-dark text-white'>\r\n                            <h3>\r\n                              <Icon icon='landmark' />\r\n                              <span style={{ marginLeft: '20px' }}>{division.name !== 'United States' ? division.name : 'Federal'}</span>\r\n                            </h3>\r\n                          </div>\r\n                          \r\n                          <div id={safeDivisionName} className='card-body collapse show'>\r\n                            <div className='card-deck'>\r\n                              {\r\n                                division.offices && division.offices.map(officeIndex => {\r\n                                  const office = this.state.representatives.offices[officeIndex]\r\n                                  const officials = office.officialIndices.map(officialIndex => this.state.representatives.officials[officialIndex])\r\n\r\n                                  return (\r\n                                    <React.Fragment key={officeIndex}>\r\n                                      \r\n                                        {\r\n                                          officials.map(official => {\r\n                                            return (\r\n                                              <OfficialCard key={official.name + Math.random()} office={office} official={official} />\r\n                                            )\r\n                                          })\r\n                                        }\r\n                                      \r\n                                    </React.Fragment>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </section>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n          }\r\n\r\n          {/* <pre>{JSON.stringify(this.state.representatives, null, 2)}</pre> */}\r\n        </div>\r\n\r\n        <footer className='footer mt-auto py-3 animate__animated animate__slideInUp'>\r\n          <div className='container'>\r\n            <a href='https://github.com/sponsors/mathiscode' target='_blank' rel='noopener noreferrer'>Made with <Icon icon='heart' color='#d00' /> by <span style={{ textDecoration: 'underline' }}>Jay Mathis</span></a>\r\n            <small className='float-right'><em>Data provided by <a href='https://developers.google.com/civic-information' target='_blank' rel='noopener noreferrer'>Google Civic Information</a></em></small>\r\n          </div>\r\n        </footer>\r\n\r\n        <Fab\r\n          alwaysShowTitle={true}\r\n          event='click'\r\n          icon={<Icon icon='bars' />}\r\n          mainButtonStyles={{ backgroundColor: '#aa0000' }}\r\n          children={\r\n            [\r\n              <Action text='Search' style={actionStyle}\r\n                onClick={() => {\r\n                  this.scrollToTop()\r\n                  document.querySelector('.location-search-input').focus()\r\n                }}\r\n              >\r\n                <Icon icon='search' />\r\n              </Action>,\r\n\r\n              <Action text='Register to Vote' style={actionStyle} onClick={() => window.open('https://www.vote.org/register-to-vote/', '_blank')}><Icon icon='vote-yea' /></Action>,\r\n              <Action text='Buy me a beer' style={actionStyle} onClick={() => window.open('https://github.com/sponsors/mathiscode', '_blank')}><Icon icon='beer' /></Action>\r\n            ]\r\n          }\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if ('serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/wgm-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'WhoGoverns.me Service Worker ready!'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport App from './App'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport './index.scss'\r\nimport 'animate.css'\r\n\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// Setup FontAwesome Library\r\nimport {\r\n  faAngleDoubleUp, \r\n  faBars, \r\n  faEnvelope, \r\n  faGavel, \r\n  faHeart, \r\n  faLink, \r\n  faMapMarkerAlt, \r\n  faPhone, \r\n  faGlobeAmericas, \r\n  faDemocrat, \r\n  faRepublican, \r\n  faVoteYea, \r\n  faWindowMinimize, \r\n  faBeer, \r\n  faSearch,\r\n  faLandmark,\r\n  faCity\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  fab,\r\n  faAngleDoubleUp,\r\n  faBars,\r\n  faEnvelope,\r\n  faGavel,\r\n  faHeart,\r\n  faLink,\r\n  faMapMarkerAlt,\r\n  faPhone,\r\n  faGlobeAmericas,\r\n  faDemocrat,\r\n  faRepublican,\r\n  faVoteYea,\r\n  faWindowMinimize,\r\n  faBeer,\r\n  faSearch,\r\n  faLandmark,\r\n  faCity\r\n)\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\nserviceWorker.register()","module.exports = __webpack_public_path__ + \"static/media/default-photo.447bb7f2.jpg\";"],"sourceRoot":""}